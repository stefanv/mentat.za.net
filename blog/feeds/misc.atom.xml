<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stéfan van der Walt</title><link href="http://mentat.za.net/blog/" rel="alternate"></link><link href="http://mentat.za.net/blog/feeds/misc.atom.xml" rel="self"></link><id>http://mentat.za.net/blog/</id><updated>2015-01-18T00:00:00+01:00</updated><entry><title>Visualizing and pruning the docker image tree</title><link href="http://mentat.za.net/blog/2015/01/18/visualizing-and-pruning-the-docker-image-tree/" rel="alternate"></link><updated>2015-01-18T00:00:00+01:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2015-01-18:blog/2015/01/18/visualizing-and-pruning-the-docker-image-tree/</id><summary type="html">&lt;p&gt;Visualizing the Docker image dependency tree is a useful way of
checking image sizes and inter-image dependencies.  Since images
occupy a lot of disk space, we may also want to prune unused images.&lt;/p&gt;
&lt;h2&gt;Visualizing image dependencies&lt;/h2&gt;
&lt;p&gt;In version 1.2.0 of Docker, the image dependency tree is available via
the &lt;code&gt;docker images --tree&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker images --tree
Warning: &lt;span class="s1"&gt;&amp;#39;--tree&amp;#39;&lt;/span&gt; is deprecated, it will be removed soon. See usage.
├─511136ea3c5a Virtual Size: &lt;span class="m"&gt;0&lt;/span&gt; B
│ ├─5bc37dc2dfba Virtual Size: 192.5 MB
│ │ └─61cb619d86bc Virtual Size: 192.7 MB
│ │   └─3f45ca85fedc Virtual Size: 192.7 MB
│ │     └─78e82ee876a2 Virtual Size: 192.7 MB
│ │       └─dc07507cef42 Virtual Size: 192.7 MB
│ │         └─86ce37374f40 Virtual Size: 192.7 MB
│ │           └─d76983dc2ebd Virtual Size: 213.3 MB
│ │             └─04a01662a6a8 Virtual Size: 214.5 MB
│ │               └─7769c00dfefe Virtual Size: 525.9 MB
│ │                 └─6ac8d6e449b1 Virtual Size: 525.9 MB
│ │                   └─e3a84ca24205 Virtual Size: 525.9 MB
│ │                     └─26f10d07659d Virtual Size: 525.9 MB
│ ├─e12c576ad8a1 Virtual Size: 198.9 MB
│ │ └─102eb2a101b8 Virtual Size: 199.1 MB
│ │   └─530dbbae98a0 Virtual Size: 199.1 MB
│ │     └─37dde56c3a42 Virtual Size: 199.1 MB
│ │       └─8f118367086c Virtual Size: 228.5 MB
│ │         └─277eb4304907 Virtual Size: 228.5 MB Tags: ubuntu:utopic, ubuntu:14.10
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, the Docker team is trying to streamline its client, and has
scheduled this feature for deprecation.  How, then, do we replicate
its behavior?&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="https://github.com/justone/dockviz"&gt;DockerViz&lt;/a&gt;.  Grab a binary
from &lt;a href="http://gobuild.io/github.com/justone/dockviz"&gt;gobuild.io&lt;/a&gt; and
place it somewhere on your path.&lt;/p&gt;
&lt;h3&gt;Querying the Docker image status&lt;/h3&gt;
&lt;p&gt;The Docker server can be queried via its
&lt;a href="https://docs.docker.com/reference/api/docker_remote_api/"&gt;public API&lt;/a&gt;.
It is typically available either on &lt;code&gt;http://localhost:4243&lt;/code&gt; or
&lt;code&gt;/var/run/docker.sock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One of the following two calls should therefore extract the image
status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl -s http://localhost:4243/images/json?all=1
echo -e &amp;quot;GET /images/json?all=1 HTTP/1.0\r\n&amp;quot; | nc -U /var/run/docker.sock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On my machine, the second query returns:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;HTTP/1.0 200 OK
Content-Type: application/json
Date: Sun, 18 Jan 2015 17:41:34 GMT

[{&amp;quot;Created&amp;quot;:1421528518,&amp;quot;Id&amp;quot;:&amp;quot;d6244a9e8b5ff885579c8c7d203e4da703e3e80621449dbbd58c365dba5c83b1&amp;quot;,&amp;quot;ParentId&amp;quot;:&amp;quot;b68521997660ae8a6916037696cf716ca415bba0766487bfa5b79cda4adfb62c&amp;quot;,&amp;quot;RepoTags&amp;quot;:[&amp;quot;datascience-base:latest&amp;quot;],&amp;quot;Size&amp;quot;:0,&amp;quot;VirtualSize&amp;quot;:2041562468}
,{&amp;quot;Created&amp;quot;:1421528517,&amp;quot;Id&amp;quot;:&amp;quot;b68521997660ae8a6916037696cf716ca415bba0766487bfa5b79cda4adfb62c&amp;quot;,&amp;quot;ParentId&amp;quot;:&amp;quot;d3cb571e5e16fce16a59c16c87e01ea4051d7cae016dba90688c9e4a53a921c4&amp;quot;,&amp;quot;RepoTags&amp;quot;:[&amp;quot;\u003cnone\u003e:\u003cnone\u003e&amp;quot;],&amp;quot;Size&amp;quot;:0,&amp;quot;VirtualSize&amp;quot;:2041562468}
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;DockViz parses this JSON and outputs a formatted tree:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat ~/scripts/docktree 
&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;GET /images/json?all=1 HTTP/1.0\r\n&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; nc -U /var/run/docker.sock &lt;span class="p"&gt;|&lt;/span&gt; tail -n +5 &lt;span class="p"&gt;|&lt;/span&gt; dockviz images --tree
&lt;span class="nv"&gt;$ &lt;/span&gt;docktree
├─511136ea3c5a Virtual Size: 0.0 B
│ ├─5bc37dc2dfba Virtual Size: 192.5 MB
│ │ └─61cb619d86bc Virtual Size: 192.7 MB
│ │   └─3f45ca85fedc Virtual Size: 192.7 MB
│ │     └─78e82ee876a2 Virtual Size: 192.7 MB
│ │       └─dc07507cef42 Virtual Size: 192.7 MB
│ │         └─86ce37374f40 Virtual Size: 192.7 MB
│ │           └─d76983dc2ebd Virtual Size: 213.3 MB
│ │             └─04a01662a6a8 Virtual Size: 214.5 MB
│ │               └─7769c00dfefe Virtual Size: 525.9 MB
│ │                 └─6ac8d6e449b1 Virtual Size: 525.9 MB
│ │                   └─e3a84ca24205 Virtual Size: 525.9 MB
│ │                     └─26f10d07659d Virtual Size: 525.9 MB
│ ├─e12c576ad8a1 Virtual Size: 198.9 MB
│ │ └─102eb2a101b8 Virtual Size: 199.1 MB
│ │   └─530dbbae98a0 Virtual Size: 199.1 MB
│ │     └─37dde56c3a42 Virtual Size: 199.1 MB
│ │       └─8f118367086c Virtual Size: 228.5 MB
│ │         └─277eb4304907 Virtual Size: 228.5 MB Tags: ubuntu:14.10, ubuntu:utopic
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that, on my system, the first branch of the tree is dangling,
i.e. not associated with a tagged image--I must have removed a tagged
image earlier, and these are its remaining dependencies.&lt;/p&gt;
&lt;h2&gt;Pruning unusued images&lt;/h2&gt;
&lt;p&gt;Built and downloaded Docker images quickly gobble up a lot of space:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo du -hcs /var/lib/docker/
10G /var/lib/docker/
10G total
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;docker images&lt;/code&gt; command allows us to
&lt;a href="https://docs.docker.com/reference/commandline/cli/#images"&gt;list dangling images&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker images --filter dangling=true --quiet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And we obtain a list of containers (images that were fired up and
modified) using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker ps -aq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I remove both of these with the following script (WARNING: This
will delete ALL containers and any unused, downloaded images, so use
with caution!):&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;CONTAINERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker ps -aq&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;IMAGES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker images --filter &lt;span class="nv"&gt;dangling&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; --quiet&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$CONTAINERS&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    docker rm &lt;span class="nv"&gt;$CONTAINERS&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No containers to remove&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$IMAGES&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    docker rmi &lt;span class="nv"&gt;$IMAGES&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No dangling images to remove&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Then:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-clean
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo du -hcs /var/lib/docker/
6.6G    /var/lib/docker/
6.6G    total
&lt;span class="nv"&gt;$ &lt;/span&gt;docktree
└─511136ea3c5a Virtual Size: 0.0 B
  ├─e12c576ad8a1 Virtual Size: 198.9 MB
  │ └─102eb2a101b8 Virtual Size: 199.1 MB
  │   └─530dbbae98a0 Virtual Size: 199.1 MB
  │     └─37dde56c3a42 Virtual Size: 199.1 MB
  │       └─8f118367086c Virtual Size: 228.5 MB
  │         └─277eb4304907 Virtual Size: 228.5 MB Tags: ubuntu:utopic, ubuntu:14.10
  ├─d497ad3926c8 Virtual Size: 192.5 MB
  │ └─ccb62158e970 Virtual Size: 192.7 MB
  │   └─e791be0477f2 Virtual Size: 192.7 MB
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that, now, all branches of the tree are associated with tagged
images.  If I remove &lt;code&gt;ubuntu:utopic&lt;/code&gt;, I can again run the pruning
process to get rid of its left-over dependencies.&lt;/p&gt;</summary><category term="docker"></category></entry><entry><title>SciPy2013 Proceedings</title><link href="http://mentat.za.net/blog/2013/06/27/scipy2013-proceedings/" rel="alternate"></link><updated>2013-06-27T17:20:00+02:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2013-06-27:blog/2013/06/27/scipy2013-proceedings/</id><summary type="html">&lt;p&gt;The talks for the 12th (fantastic) Python in Science conference just concluded,
and I am happy to announce the
&lt;a href="https://dl.dropboxusercontent.com/u/380268/scipy_2013_proceedings_draft.pdf"&gt;conference proceedings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This may come as a surprize to some, since in the past we have been unable to
publish the proceedings in a timely manner.  So, what changed?&lt;/p&gt;
&lt;h2&gt;Review process&lt;/h2&gt;
&lt;p&gt;For 2013 we followed a &lt;strong&gt;very light-weight review process, via comments on
GitHub pull-requests&lt;/strong&gt;.  This change has an important consequence: in contrast
to the traditional review process, where reviewers critically pull apart
papers, the process now changes into a constructive conversation--the reviewer
becomes an ally to the author, helping them to get their paper signed off on.&lt;/p&gt;
&lt;p&gt;In addition, this is a very familiar process to most members of our community
who regularly collaborate to open source projects.  Most such projects nowadays
follow a similar methodology for discussing and integrating patches.&lt;/p&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;Since we can't expect reviewers to check out and build the papers themselves, a
&lt;a href="http://stefan.pythonanywhere.com"&gt;paper build bot&lt;/a&gt; is provided to generate
PDFs from pull-requests, which contain papers in plain-text ReStructuredText
format (see the
&lt;a href="https://github.com/scipy/scipy_proceedings/tree/2013"&gt;proceedings repository&lt;/a&gt; for
examples, and all papers starting 2010).&lt;/p&gt;
&lt;p&gt;For authors, tools are provided to convert the ReStructuredText papers to
PDFs in IEEE Computer Society paper style.&lt;/p&gt;
&lt;h2&gt;Help us with the final review&lt;/h2&gt;
&lt;p&gt;We welcome your feedback on the proceedings!  If you spot a mistake, please
submit a pull request on
&lt;a href="https://github.com/scipy/scipy_proceedings/tree/2013"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Finally, a big shout-out to the amazing team of people who organized this
year's conference, and to the wonderfully inclusive and talented Scientific
Python community, of which I am proud to be part of.&lt;/p&gt;</summary><category term="scipy"></category><category term="python"></category></entry><entry><title>Replicable super-resolution paper</title><link href="http://mentat.za.net/blog/2012/10/15/replicable-super-resolution-paper/" rel="alternate"></link><updated>2012-10-15T00:04:00+02:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-10-15:blog/2012/10/15/replicable-super-resolution-paper/</id><summary type="html">&lt;p&gt;While I loved the topic of my PhD, I had to take a break after staring at that
problem for several years.  Thereafter, I was side-tracked by
&lt;a href="http://github.com/scipy"&gt;several&lt;/a&gt; &lt;a href="http://scikit-image.org"&gt;other&lt;/a&gt;
&lt;a href="http://dipy.org"&gt;projects&lt;/a&gt;, and never got around to publishing a paper on
&lt;a href="http://mentat.za.net/phd_dissertation.html"&gt;my dissertation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here, then, is a summary of the simple but effective super-resolution algorithm
described therein:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arxiv.org/abs/1210.3404"&gt;http://arxiv.org/abs/1210.3404&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also submitted this work to NIPS: the reviewers liked the paper, but they
were not convinced of its novelty.  Having spent a lot of time studying the
existing literature, all I can say in response is that, while solving the
problem as a sparse linear system was well known at the time, phrasing Drizzle
as a linear operator and using it for super-resolution was not.&lt;/p&gt;
&lt;p&gt;But the proof of the pudding is in the eating! Have a look at the
&lt;a href="http://mentat.za.net/supreme"&gt;results and published code&lt;/a&gt; -- you can download it all (including a
sample data-set) and play with the different reconstruction parameters.  Quite
a bit of the code has since graduated into &lt;a href="http://scikit-image.org"&gt;scikit-image&lt;/a&gt;.&lt;/p&gt;</summary><category term="super-resolution"></category><category term="image-processing"></category><category term="python"></category><category term="science"></category></entry><entry><title>scikits-image 0.7</title><link href="http://mentat.za.net/blog/2012/09/30/scikits-image-07/" rel="alternate"></link><updated>2012-09-30T16:18:00+02:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-09-30:blog/2012/09/30/scikits-image-07/</id><summary type="html">&lt;p&gt;We're happy to announce the 7th version of scikits-image!&lt;/p&gt;
&lt;p&gt;Scikits-image is an image processing toolbox for SciPy that includes algorithms
for segmentation, geometric transformations, color space manipulation,
analysis, filtering, morphology, feature detection, and more.&lt;/p&gt;
&lt;p&gt;For more information, examples, and documentation, please visit &lt;a href="http://skimage.org"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;p&gt;It's been only 3 months since scikits-image 0.6 was released, but in that short
time, we've managed to add plenty of new features and enhancements, including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometric image transforms&lt;/li&gt;
&lt;li&gt;3 new image segmentation routines (Felsenzwalb, Quickshift, SLIC)&lt;/li&gt;
&lt;li&gt;Local binary patterns for texture characterization&lt;/li&gt;
&lt;li&gt;Morphological reconstruction&lt;/li&gt;
&lt;li&gt;Polygon approximation&lt;/li&gt;
&lt;li&gt;CIE Lab color space conversion&lt;/li&gt;
&lt;li&gt;Image pyramids&lt;/li&gt;
&lt;li&gt;Multispectral support in random walker segmentation&lt;/li&gt;
&lt;li&gt;Slicing, concatenation, and natural sorting of image collections&lt;/li&gt;
&lt;li&gt;Perimeter and coordinates measurements in regionprops&lt;/li&gt;
&lt;li&gt;An extensible image viewer based on Qt and Matplotlib, with plugins for edge
  detection, line-profiling, and viewing image collections&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus, this release adds a number of bug fixes, new examples, and performance
enhancements.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Comparison of pupular segmentation algorithms" src="/images/lena_superpixels.jpg" title="Comparison of pupular segmentation algorithms"&gt;&lt;/p&gt;
&lt;h2&gt;Contributors to this release&lt;/h2&gt;
&lt;p&gt;This release was only possible due to the efforts of many contributors, both
new and old.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Andreas Mueller&lt;/li&gt;
&lt;li&gt;Andreas Wuerl&lt;/li&gt;
&lt;li&gt;Andy Wilson&lt;/li&gt;
&lt;li&gt;Brian Holt&lt;/li&gt;
&lt;li&gt;Christoph Gohlke&lt;/li&gt;
&lt;li&gt;Dharhas Pothina&lt;/li&gt;
&lt;li&gt;Emmanuelle Gouillart&lt;/li&gt;
&lt;li&gt;Guillaume Gay&lt;/li&gt;
&lt;li&gt;Josh Warner&lt;/li&gt;
&lt;li&gt;James Bergstra&lt;/li&gt;
&lt;li&gt;Johannes Schönberger&lt;/li&gt;
&lt;li&gt;Jonathan J. Helmus&lt;/li&gt;
&lt;li&gt;Juan Nunez-Iglesias&lt;/li&gt;
&lt;li&gt;Leon Tietz&lt;/li&gt;
&lt;li&gt;Marianne Corvellec&lt;/li&gt;
&lt;li&gt;Matt McCormick&lt;/li&gt;
&lt;li&gt;Neil Yager&lt;/li&gt;
&lt;li&gt;Nicolas Pinto&lt;/li&gt;
&lt;li&gt;Nicolas Poilvert&lt;/li&gt;
&lt;li&gt;Pavel Campr&lt;/li&gt;
&lt;li&gt;Petter Strandmark&lt;/li&gt;
&lt;li&gt;Stéfan van der Walt&lt;/li&gt;
&lt;li&gt;Tim Sheerman-Chase&lt;/li&gt;
&lt;li&gt;Tomas Kazmar&lt;/li&gt;
&lt;li&gt;Tony S Yu&lt;/li&gt;
&lt;li&gt;Wei Li&lt;/li&gt;
&lt;/ul&gt;</summary><category term="image processing"></category><category term="scipy"></category><category term="python"></category><category term="science"></category></entry><entry><title>Adobe's new free font: Source Code Pro</title><link href="http://mentat.za.net/blog/2012/09/26/adobes-new-free-font-source-code-pro/" rel="alternate"></link><updated>2012-09-26T11:49:00+02:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-09-26:blog/2012/09/26/adobes-new-free-font-source-code-pro/</id><summary type="html">&lt;p&gt;Adobe yesterday
&lt;a href="http://blogs.adobe.com/typblography/2012/09/source-code-pro.html"&gt;released its free and open source Type family, Source Code Pro&lt;/a&gt;,
which includes an eye-pleasing monospace font  ideally suited for coding.
In the past, and at the recommendation of &lt;a href="http://blog.fperez.org/"&gt;Fernando Perez&lt;/a&gt;, I've
used the beautiful (but non-free) &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=17879"&gt;Consolas by Microsoft&lt;/a&gt;; now,
which is best?&lt;/p&gt;
&lt;p&gt;To install on Linux:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://sourceforge.net/projects/sourcecodepro.adobe/"&gt;Grab the font&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Copy the files to &lt;code&gt;~/.fonts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;fc-cache -f -v&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The font should now be available for selection in apps such as Firefox, Gnome
Terminal, etc.  To make it the default font in Emacs::&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set-default-font&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Source Code Pro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's a comparison of Consolas (left) and Source Code Pro (right):&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/consolas_vs_source_code_pro.png"&gt;&lt;/p&gt;
&lt;p&gt;Comments also on &lt;a href="https://plus.google.com/104831275312843762750/posts/Ju6Ns8Dtuik"&gt;Google+&lt;/a&gt;.&lt;/p&gt;</summary><category term="coding"></category><category term="emacs"></category><category term="linux"></category></entry><entry><title>Emacs package management</title><link href="http://mentat.za.net/blog/2012/09/25/emacs-package-management/" rel="alternate"></link><updated>2012-09-25T17:14:00+02:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-09-25:blog/2012/09/25/emacs-package-management/</id><summary type="html">&lt;p&gt;I recently tried to install MuMaMo as one of the dependencies for Takafumi
Arakaki's &lt;a href="https://github.com/tkf/emacs-ipython-notebook"&gt;Emacs-based IPython notebook&lt;/a&gt;.  The instructions on the MuMaMo
webpage were as clear as mud and aimed primarily at Windows users.  Enters
&lt;a href="https://github.com/dimitri/el-get"&gt;apt-get for Emacs&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;My Emacs setup is shared across multiple machines: a synchronized &lt;code&gt;elisp&lt;/code&gt;
folder, containing &lt;code&gt;*.el&lt;/code&gt; files, along with my &lt;code&gt;.emacs&lt;/code&gt; configuration.
&lt;code&gt;el-get&lt;/code&gt; allows you to share your package installation folder in a similar
fashion.  Here are some relevant configuration snippets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;; Everything gets installed into ~/elisp, a folder&lt;/span&gt;
&lt;span class="c1"&gt;; I sync across all my machines&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;el-get-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/elisp/el-get&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;el-get-install-dir&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/elisp/el-get/el-get&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;load-path&lt;/span&gt; &lt;span class="nv"&gt;el-get-install-dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;; If el-get is missing, install it automatically&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;el-get&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url-retrieve&lt;/span&gt;
   &lt;span class="s"&gt;&amp;quot;https://raw.github.com/dimitri/el-get/master/el-get-install.el&amp;quot;&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;point-max&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;eval-print-last-sexp&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="c1"&gt;; Install these packages, and call the specified configuration snippets&lt;/span&gt;
&lt;span class="c1"&gt;; after each load&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;el-get-sources&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt; &lt;span class="nv"&gt;ethan-wspace&lt;/span&gt;
         &lt;span class="ss"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-ethan-wspace-mode&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;set-face-background&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;ethan-wspace-face&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gray95&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt; &lt;span class="nv"&gt;column-marker&lt;/span&gt;
         &lt;span class="ss"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;font-lock-mode-hook&lt;/span&gt;
                          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;column-marker-1&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="c1"&gt;; Also install these packages, no configuration required&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;my-packages&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;append&lt;/span&gt;
       &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;el-get&lt;/span&gt; &lt;span class="nv"&gt;maxframe&lt;/span&gt; &lt;span class="nv"&gt;markdown-mode&lt;/span&gt; &lt;span class="nv"&gt;ein&lt;/span&gt; &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mapcar&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;el-get-source-name&lt;/span&gt; &lt;span class="nv"&gt;el-get-sources&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;; Check packages and install any that are missing&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;el-get&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;sync&lt;/span&gt; &lt;span class="nv"&gt;my-packages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are two ways to specify packages to be installed: either include them in
the &lt;code&gt;my-packages&lt;/code&gt; list, or add them to &lt;code&gt;el-get-sources&lt;/code&gt;, which in addition
allows further customization upon successful loading of the package.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://software-carpentry.org/2012/09/whats-in-your-stack/"&gt;What's in your stack?&lt;/a&gt; Here's my list of Emacs packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Org Mode, Ethan&amp;#39;s wspace, Tab Bar, Column Marker, Max Frame, EIN, Python,
JS2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do you know of any other useful packages?  Let me know!&lt;/p&gt;
&lt;!-- References --&gt;</summary><category term="emacs"></category><category term="python"></category><category term="scipy"></category></entry></feed>