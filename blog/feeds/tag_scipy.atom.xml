<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stéfan van der Walt - scipy</title><link href="http://mentat.za.net/blog/" rel="alternate"></link><link href="http://mentat.za.net/blog/feeds/tag_scipy.atom.xml" rel="self"></link><id>http://mentat.za.net/blog/</id><updated>2013-06-27T17:20:00-07:00</updated><entry><title>SciPy2013 Proceedings</title><link href="http://mentat.za.net/blog/2013/06/27/scipy2013-proceedings/" rel="alternate"></link><published>2013-06-27T17:20:00-07:00</published><updated>2013-06-27T17:20:00-07:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2013-06-27:/blog/2013/06/27/scipy2013-proceedings/</id><summary type="html">&lt;p&gt;The talks for the 12th (fantastic) Python in Science conference just concluded,
and I am happy to announce the
&lt;a href="https://dl.dropboxusercontent.com/u/380268/scipy_2013_proceedings_draft.pdf"&gt;conference proceedings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This may come as a surprize to some, since in the past we have been unable to
publish the proceedings in a timely manner.  So, what changed?&lt;/p&gt;
&lt;h2&gt;Review process …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;The talks for the 12th (fantastic) Python in Science conference just concluded,
and I am happy to announce the
&lt;a href="https://dl.dropboxusercontent.com/u/380268/scipy_2013_proceedings_draft.pdf"&gt;conference proceedings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This may come as a surprize to some, since in the past we have been unable to
publish the proceedings in a timely manner.  So, what changed?&lt;/p&gt;
&lt;h2&gt;Review process&lt;/h2&gt;
&lt;p&gt;For 2013 we followed a &lt;strong&gt;very light-weight review process, via comments on
GitHub pull-requests&lt;/strong&gt;.  This change has an important consequence: in contrast
to the traditional review process, where reviewers critically pull apart
papers, the process now changes into a constructive conversation--the reviewer
becomes an ally to the author, helping them to get their paper signed off on.&lt;/p&gt;
&lt;p&gt;In addition, this is a very familiar process to most members of our community
who regularly collaborate to open source projects.  Most such projects nowadays
follow a similar methodology for discussing and integrating patches.&lt;/p&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;Since we can't expect reviewers to check out and build the papers themselves, a
&lt;a href="http://stefan.pythonanywhere.com"&gt;paper build bot&lt;/a&gt; is provided to generate
PDFs from pull-requests, which contain papers in plain-text ReStructuredText
format (see the
&lt;a href="https://github.com/scipy/scipy_proceedings/tree/2013"&gt;proceedings repository&lt;/a&gt; for
examples, and all papers starting 2010).&lt;/p&gt;
&lt;p&gt;For authors, tools are provided to convert the ReStructuredText papers to
PDFs in IEEE Computer Society paper style.&lt;/p&gt;
&lt;h2&gt;Help us with the final review&lt;/h2&gt;
&lt;p&gt;We welcome your feedback on the proceedings!  If you spot a mistake, please
submit a pull request on
&lt;a href="https://github.com/scipy/scipy_proceedings/tree/2013"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Finally, a big shout-out to the amazing team of people who organized this
year's conference, and to the wonderfully inclusive and talented Scientific
Python community, of which I am proud to be part of.&lt;/p&gt;</content><category term="scipy"></category><category term="python"></category></entry><entry><title>scikits-image 0.7</title><link href="http://mentat.za.net/blog/2012/09/30/scikits-image-0-dot-7/" rel="alternate"></link><published>2012-09-30T16:18:00-07:00</published><updated>2012-09-30T16:18:00-07:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-09-30:/blog/2012/09/30/scikits-image-0-dot-7/</id><summary type="html">&lt;p&gt;We're happy to announce the 7th version of scikits-image!&lt;/p&gt;
&lt;p&gt;Scikits-image is an image processing toolbox for SciPy that includes algorithms
for segmentation, geometric transformations, color space manipulation,
analysis, filtering, morphology, feature detection, and more.&lt;/p&gt;
&lt;p&gt;For more information, examples, and documentation, please visit &lt;a href="http://skimage.org"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;p&gt;It's been only 3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We're happy to announce the 7th version of scikits-image!&lt;/p&gt;
&lt;p&gt;Scikits-image is an image processing toolbox for SciPy that includes algorithms
for segmentation, geometric transformations, color space manipulation,
analysis, filtering, morphology, feature detection, and more.&lt;/p&gt;
&lt;p&gt;For more information, examples, and documentation, please visit &lt;a href="http://skimage.org"&gt;our website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;p&gt;It's been only 3 months since scikits-image 0.6 was released, but in that short
time, we've managed to add plenty of new features and enhancements, including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometric image transforms&lt;/li&gt;
&lt;li&gt;3 new image segmentation routines (Felsenzwalb, Quickshift, SLIC)&lt;/li&gt;
&lt;li&gt;Local binary patterns for texture characterization&lt;/li&gt;
&lt;li&gt;Morphological reconstruction&lt;/li&gt;
&lt;li&gt;Polygon approximation&lt;/li&gt;
&lt;li&gt;CIE Lab color space conversion&lt;/li&gt;
&lt;li&gt;Image pyramids&lt;/li&gt;
&lt;li&gt;Multispectral support in random walker segmentation&lt;/li&gt;
&lt;li&gt;Slicing, concatenation, and natural sorting of image collections&lt;/li&gt;
&lt;li&gt;Perimeter and coordinates measurements in regionprops&lt;/li&gt;
&lt;li&gt;An extensible image viewer based on Qt and Matplotlib, with plugins for edge
  detection, line-profiling, and viewing image collections&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus, this release adds a number of bug fixes, new examples, and performance
enhancements.&lt;/p&gt;
&lt;p&gt;&lt;img src="/blog/images/lena_superpixels.jpg" title="Comparison of pupular segmentation algorithms" alt="Comparison of pupular segmentation algorithms"&gt;&lt;/p&gt;
&lt;h2&gt;Contributors to this release&lt;/h2&gt;
&lt;p&gt;This release was only possible due to the efforts of many contributors, both
new and old.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Andreas Mueller&lt;/li&gt;
&lt;li&gt;Andreas Wuerl&lt;/li&gt;
&lt;li&gt;Andy Wilson&lt;/li&gt;
&lt;li&gt;Brian Holt&lt;/li&gt;
&lt;li&gt;Christoph Gohlke&lt;/li&gt;
&lt;li&gt;Dharhas Pothina&lt;/li&gt;
&lt;li&gt;Emmanuelle Gouillart&lt;/li&gt;
&lt;li&gt;Guillaume Gay&lt;/li&gt;
&lt;li&gt;Josh Warner&lt;/li&gt;
&lt;li&gt;James Bergstra&lt;/li&gt;
&lt;li&gt;Johannes Schönberger&lt;/li&gt;
&lt;li&gt;Jonathan J. Helmus&lt;/li&gt;
&lt;li&gt;Juan Nunez-Iglesias&lt;/li&gt;
&lt;li&gt;Leon Tietz&lt;/li&gt;
&lt;li&gt;Marianne Corvellec&lt;/li&gt;
&lt;li&gt;Matt McCormick&lt;/li&gt;
&lt;li&gt;Neil Yager&lt;/li&gt;
&lt;li&gt;Nicolas Pinto&lt;/li&gt;
&lt;li&gt;Nicolas Poilvert&lt;/li&gt;
&lt;li&gt;Pavel Campr&lt;/li&gt;
&lt;li&gt;Petter Strandmark&lt;/li&gt;
&lt;li&gt;Stéfan van der Walt&lt;/li&gt;
&lt;li&gt;Tim Sheerman-Chase&lt;/li&gt;
&lt;li&gt;Tomas Kazmar&lt;/li&gt;
&lt;li&gt;Tony S Yu&lt;/li&gt;
&lt;li&gt;Wei Li&lt;/li&gt;
&lt;/ul&gt;</content><category term="image processing"></category><category term="scipy"></category><category term="python"></category><category term="science"></category></entry><entry><title>Emacs package management</title><link href="http://mentat.za.net/blog/2012/09/25/emacs-package-management/" rel="alternate"></link><published>2012-09-25T17:14:00-07:00</published><updated>2012-09-25T17:14:00-07:00</updated><author><name>Stefan van der Walt</name></author><id>tag:mentat.za.net,2012-09-25:/blog/2012/09/25/emacs-package-management/</id><summary type="html">&lt;p&gt;I recently tried to install MuMaMo as one of the dependencies for Takafumi
Arakaki's &lt;a href="https://github.com/tkf/emacs-ipython-notebook"&gt;Emacs-based IPython notebook&lt;/a&gt;.  The instructions on the MuMaMo
webpage were as clear as mud and aimed primarily at Windows users.  Enters
&lt;a href="https://github.com/dimitri/el-get"&gt;apt-get for Emacs&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;My Emacs setup is shared across multiple machines: a synchronized &lt;code&gt;elisp&lt;/code&gt;
folder …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently tried to install MuMaMo as one of the dependencies for Takafumi
Arakaki's &lt;a href="https://github.com/tkf/emacs-ipython-notebook"&gt;Emacs-based IPython notebook&lt;/a&gt;.  The instructions on the MuMaMo
webpage were as clear as mud and aimed primarily at Windows users.  Enters
&lt;a href="https://github.com/dimitri/el-get"&gt;apt-get for Emacs&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;My Emacs setup is shared across multiple machines: a synchronized &lt;code&gt;elisp&lt;/code&gt;
folder, containing &lt;code&gt;*.el&lt;/code&gt; files, along with my &lt;code&gt;.emacs&lt;/code&gt; configuration.
&lt;code&gt;el-get&lt;/code&gt; allows you to share your package installation folder in a similar
fashion.  Here are some relevant configuration snippets:&lt;/p&gt;
&lt;p&gt;```common-lisp&lt;/p&gt;
&lt;p&gt;; Everything gets installed into ~/elisp, a folder
; I sync across all my machines&lt;/p&gt;
&lt;p&gt;(setq el-get-dir "~/elisp/el-get")
(setq el-get-install-dir "~/elisp/el-get/el-get")
(add-to-list 'load-path el-get-install-dir)&lt;/p&gt;
&lt;p&gt;; If el-get is missing, install it automatically&lt;/p&gt;
&lt;p&gt;(unless (require 'el-get nil t)
  (url-retrieve
   "https://raw.github.com/dimitri/el-get/master/el-get-install.el"
   (lambda (s)
     (goto-char (point-max))
     (eval-print-last-sexp))))&lt;/p&gt;
&lt;p&gt;; Install these packages, and call the specified configuration snippets
; after each load
(setq el-get-sources
      '(&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    (:name ethan-wspace
     :after (progn
              (global-ethan-wspace-mode 1)
              (set-face-background &amp;#39;ethan-wspace-face &amp;quot;gray95&amp;quot;)))

    (:name column-marker
     :after (add-hook &amp;#39;font-lock-mode-hook
                      (lambda () (interactive) (column-marker-1 80))))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;; Also install these packages, no configuration required
(setq my-packages
      (append
       '(el-get maxframe markdown-mode ein python)
       (mapcar 'el-get-source-name el-get-sources)
       )
)&lt;/p&gt;
&lt;p&gt;; Check packages and install any that are missing
(el-get 'sync my-packages)
```&lt;/p&gt;
&lt;p&gt;There are two ways to specify packages to be installed: either include them in
the &lt;code&gt;my-packages&lt;/code&gt; list, or add them to &lt;code&gt;el-get-sources&lt;/code&gt;, which in addition
allows further customization upon successful loading of the package.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://software-carpentry.org/2012/09/whats-in-your-stack/"&gt;What's in your stack?&lt;/a&gt; Here's my list of Emacs packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Org Mode, Ethan&amp;#39;s wspace, Tab Bar, Column Marker, Max Frame, EIN, Python,
JS2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do you know of any other useful packages?  Let me know!&lt;/p&gt;
&lt;!-- References --&gt;</content><category term="emacs"></category><category term="python"></category><category term="scipy"></category></entry></feed>